# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'monitoreoview.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from pyswip import Prolog
from graphviz import Digraph
class RoomController:
    def __init__(self):
        self.prolog_instance = Prolog()
        self.prolog_instance.consult('C:/Users/jmlma/Documents/GitHub/arbol-genealogico-prolog/smart-hub-prolog/proyectofinal.pl')
        self.graph = Digraph()

    def mostrar_dispositivos(self):
        dispositivos = set()
        query = self.prolog_instance.query("dispositivos(Nombre, Lugar, Tipo).")
        for solution in query:
            dispositivos.add(solution["Nombre"] + ' en ' + solution["Lugar"].capitalize()
                             + ' de tipo ' + solution["Tipo"])
        return dispositivos

    def mostrar_ventanas(self):
        ventanas = set()
        query = self.prolog_instance.query("ventanas(Nombre,Lugar).")
        for solution in query:
            ventanas.add(solution["Nombre"].capitalize() + " en " + solution["Lugar"].capitalize())
        return ventanas

    def mostrar_habitaciones(self):
        habitaciones = set()
        query = self.prolog_instance.query("lugares(X,Cantidad).")
        for solution in query:
            print(solution["X"].capitalize() + " capacidad: " + str(solution["Cantidad"]))
            habitaciones.add(solution["X"].capitalize())
        return habitaciones

    def mostrar_luces(self):
        luces = set()
        query = self.prolog_instance.query("luces(Nombre, Habitacion).")
        for solution in query:
            luces.add(solution["Nombre"].capitalize() + " en " + solution["Habitacion"].capitalize())
        return luces

    def mostrar_puertas(self):
        puertas = set()
        query = self.prolog_instance.query("puertas(Nombre, Habitacion, Tipo).")
        for solution in query:
            puertas.add(solution["Nombre"].capitalize() + " en " + solution["Habitacion"].capitalize()
                        + " de tipo " + solution["Tipo"].capitalize())
        return puertas

    def mostrar_paneles(self):
        paneles = set()

        query2 = self.prolog_instance.query("dispositivos(Nombre,Lugar,panel_solar).")
        for sol in query2:
            print(sol["Nombre"] + "  " + sol["Lugar"])
            paneles.add(sol["Nombre"] + " en " + sol["Lugar"])
        return paneles



class Ui_MainWindow(object):
    #Constructor:
    def __init__(self):
        self.repositorio = RoomController()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1531, 755)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lista_dispositivos = QtWidgets.QListWidget(self.centralwidget)
        self.lista_dispositivos.setGeometry(QtCore.QRect(20, 140, 221, 221))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lista_dispositivos.setFont(font)
        self.lista_dispositivos.setObjectName("lista_dispositivos")
        self.lbl_dispositivos = QtWidgets.QLabel(self.centralwidget)
        self.lbl_dispositivos.setGeometry(QtCore.QRect(20, 70, 191, 31))
        self.lbl_dispositivos.setObjectName("lbl_dispositivos")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(20, 100, 451, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.txt_dispositivo = QtWidgets.QLineEdit(self.centralwidget)
        self.txt_dispositivo.setGeometry(QtCore.QRect(250, 160, 211, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.txt_dispositivo.setFont(font)
        self.txt_dispositivo.setObjectName("txt_dispositivo")
        self.lbl_dispositivo = QtWidgets.QLabel(self.centralwidget)
        self.lbl_dispositivo.setGeometry(QtCore.QRect(250, 130, 101, 22))
        self.lbl_dispositivo.setObjectName("lbl_dispositivo")
        self.btn_dispositivo = QtWidgets.QPushButton(self.centralwidget)
        self.btn_dispositivo.setGeometry(QtCore.QRect(380, 330, 91, 38))
        self.btn_dispositivo.setStyleSheet("background-color: rgb(114, 159, 207);")
        self.btn_dispositivo.setObjectName("btn_dispositivo")
        self.lbl_dispositivos_list = QtWidgets.QLabel(self.centralwidget)
        self.lbl_dispositivos_list.setGeometry(QtCore.QRect(20, 110, 101, 22))
        self.lbl_dispositivos_list.setObjectName("lbl_dispositivos_list")
        self.lbl_dispositivo_hab = QtWidgets.QLabel(self.centralwidget)
        self.lbl_dispositivo_hab.setGeometry(QtCore.QRect(250, 200, 101, 22))
        self.lbl_dispositivo_hab.setObjectName("lbl_dispositivo_hab")
        self.btn_habitacion = QtWidgets.QPushButton(self.centralwidget)
        self.btn_habitacion.setGeometry(QtCore.QRect(870, 210, 91, 38))
        self.btn_habitacion.setStyleSheet("background-color: rgb(114, 159, 207);")
        self.btn_habitacion.setObjectName("btn_habitacion")
        self.lbl_habitacion = QtWidgets.QLabel(self.centralwidget)
        self.lbl_habitacion.setGeometry(QtCore.QRect(740, 140, 101, 22))
        self.lbl_habitacion.setObjectName("lbl_habitacion")
        self.txt_habitacion = QtWidgets.QLineEdit(self.centralwidget)
        self.txt_habitacion.setGeometry(QtCore.QRect(740, 170, 211, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.txt_habitacion.setFont(font)
        self.txt_habitacion.setObjectName("txt_habitacion")
        self.lbl_habitaciones_list = QtWidgets.QLabel(self.centralwidget)
        self.lbl_habitaciones_list.setGeometry(QtCore.QRect(510, 110, 111, 22))
        self.lbl_habitaciones_list.setObjectName("lbl_habitaciones_list")
        self.lbl_habitacion_2 = QtWidgets.QLabel(self.centralwidget)
        self.lbl_habitacion_2.setGeometry(QtCore.QRect(510, 70, 191, 31))
        self.lbl_habitacion_2.setObjectName("lbl_habitacion_2")
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setGeometry(QtCore.QRect(510, 100, 451, 16))
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.cbx_dispositivo_hab = QtWidgets.QComboBox(self.centralwidget)
        self.cbx_dispositivo_hab.setGeometry(QtCore.QRect(250, 230, 211, 31))
        self.cbx_dispositivo_hab.setObjectName("cbx_dispositivo_hab")
        self.cbx_dispositivo_hab.addItem("")
        self.btn_luces = QtWidgets.QPushButton(self.centralwidget)
        self.btn_luces.setGeometry(QtCore.QRect(370, 560, 91, 38))
        self.btn_luces.setStyleSheet("background-color: rgb(114, 159, 207);")
        self.btn_luces.setObjectName("btn_luces")
        self.lbl_luces_nomb = QtWidgets.QLabel(self.centralwidget)
        self.lbl_luces_nomb.setGeometry(QtCore.QRect(250, 420, 101, 22))
        self.lbl_luces_nomb.setObjectName("lbl_luces_nomb")
        self.txt_puerta = QtWidgets.QLineEdit(self.centralwidget)
        self.txt_puerta.setGeometry(QtCore.QRect(740, 460, 211, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.txt_puerta.setFont(font)
        self.txt_puerta.setObjectName("txt_puerta")
        self.lbl_luces_hab = QtWidgets.QLabel(self.centralwidget)
        self.lbl_luces_hab.setGeometry(QtCore.QRect(250, 490, 101, 22))
        self.lbl_luces_hab.setObjectName("lbl_luces_hab")
        self.lbl_puertas_list = QtWidgets.QLabel(self.centralwidget)
        self.lbl_puertas_list.setGeometry(QtCore.QRect(510, 400, 111, 22))
        self.lbl_puertas_list.setObjectName("lbl_puertas_list")
        self.lbl_luces_list = QtWidgets.QLabel(self.centralwidget)
        self.lbl_luces_list.setGeometry(QtCore.QRect(20, 400, 101, 22))
        self.lbl_luces_list.setObjectName("lbl_luces_list")
        self.cbx_luces_hab = QtWidgets.QComboBox(self.centralwidget)
        self.cbx_luces_hab.setGeometry(QtCore.QRect(250, 520, 211, 31))
        self.cbx_luces_hab.setObjectName("cbx_luces_hab")
        self.cbx_luces_hab.addItem("")
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setGeometry(QtCore.QRect(510, 390, 451, 16))
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.lbl_luces = QtWidgets.QLabel(self.centralwidget)
        self.lbl_luces.setGeometry(QtCore.QRect(20, 360, 191, 31))
        self.lbl_luces.setObjectName("lbl_luces")
        self.btn_puertas = QtWidgets.QPushButton(self.centralwidget)
        self.btn_puertas.setGeometry(QtCore.QRect(860, 630, 91, 38))
        self.btn_puertas.setStyleSheet("background-color: rgb(114, 159, 207);")
        self.btn_puertas.setObjectName("btn_puertas")
        self.txt_luces = QtWidgets.QLineEdit(self.centralwidget)
        self.txt_luces.setGeometry(QtCore.QRect(250, 450, 211, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.txt_luces.setFont(font)
        self.txt_luces.setObjectName("txt_luces")
        self.lbl_puerta = QtWidgets.QLabel(self.centralwidget)
        self.lbl_puerta.setGeometry(QtCore.QRect(740, 430, 101, 22))
        self.lbl_puerta.setObjectName("lbl_puerta")
        self.line_4 = QtWidgets.QFrame(self.centralwidget)
        self.line_4.setGeometry(QtCore.QRect(20, 390, 451, 16))
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.lbl_habitacion1_4 = QtWidgets.QLabel(self.centralwidget)
        self.lbl_habitacion1_4.setGeometry(QtCore.QRect(510, 360, 191, 31))
        self.lbl_habitacion1_4.setObjectName("lbl_habitacion1_4")
        self.lbl_puerta_hab = QtWidgets.QLabel(self.centralwidget)
        self.lbl_puerta_hab.setGeometry(QtCore.QRect(740, 500, 101, 22))
        self.lbl_puerta_hab.setObjectName("lbl_puerta_hab")
        self.cbx_puerta_hab = QtWidgets.QComboBox(self.centralwidget)
        self.cbx_puerta_hab.setGeometry(QtCore.QRect(740, 520, 211, 31))
        self.cbx_puerta_hab.setObjectName("cbx_puerta_hab")
        self.cbx_puerta_hab.addItem("")
        self.cbx_puertas = QtWidgets.QComboBox(self.centralwidget)
        self.cbx_puertas.setGeometry(QtCore.QRect(740, 580, 211, 31))
        self.cbx_puertas.setObjectName("cbx_puertas")
        self.cbx_puertas.addItem("")
        self.lbl_puertas_tipo = QtWidgets.QLabel(self.centralwidget)
        self.lbl_puertas_tipo.setGeometry(QtCore.QRect(740, 560, 101, 22))
        self.lbl_puertas_tipo.setObjectName("lbl_puertas_tipo")
        self.lbl_ventana_hab = QtWidgets.QLabel(self.centralwidget)
        self.lbl_ventana_hab.setGeometry(QtCore.QRect(1240, 200, 101, 22))
        self.lbl_ventana_hab.setObjectName("lbl_ventana_hab")
        self.cbx_ventana_hab = QtWidgets.QComboBox(self.centralwidget)
        self.cbx_ventana_hab.setGeometry(QtCore.QRect(1240, 230, 211, 31))
        self.cbx_ventana_hab.setObjectName("cbx_ventana_hab")
        self.cbx_ventana_hab.addItem("")
        self.line_5 = QtWidgets.QFrame(self.centralwidget)
        self.line_5.setGeometry(QtCore.QRect(1010, 100, 451, 16))
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.btn_ventana = QtWidgets.QPushButton(self.centralwidget)
        self.btn_ventana.setGeometry(QtCore.QRect(1370, 290, 91, 38))
        self.btn_ventana.setStyleSheet("background-color: rgb(114, 159, 207);")
        self.btn_ventana.setObjectName("btn_ventana")
        self.lbl_ventanas = QtWidgets.QLabel(self.centralwidget)
        self.lbl_ventanas.setGeometry(QtCore.QRect(1010, 70, 191, 31))
        self.lbl_ventanas.setObjectName("lbl_ventanas")
        self.txt_ventana = QtWidgets.QLineEdit(self.centralwidget)
        self.txt_ventana.setGeometry(QtCore.QRect(1240, 160, 211, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.txt_ventana.setFont(font)
        self.txt_ventana.setObjectName("txt_ventana")
        self.lbl_ventanas_nombre = QtWidgets.QLabel(self.centralwidget)
        self.lbl_ventanas_nombre.setGeometry(QtCore.QRect(1240, 130, 101, 22))
        self.lbl_ventanas_nombre.setObjectName("lbl_ventanas_nombre")
        self.lbl_ventana_list = QtWidgets.QLabel(self.centralwidget)
        self.lbl_ventana_list.setGeometry(QtCore.QRect(1010, 110, 101, 22))
        self.lbl_ventana_list.setObjectName("lbl_ventana_list")
        self.lbl_rooms = QtWidgets.QLabel(self.centralwidget)
        self.lbl_rooms.setGeometry(QtCore.QRect(20, 10, 351, 41))
        self.lbl_rooms.setObjectName("lbl_rooms")
        self.lista_habitaciones = QtWidgets.QListWidget(self.centralwidget)
        self.lista_habitaciones.setGeometry(QtCore.QRect(510, 140, 221, 211))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lista_habitaciones.setFont(font)
        self.lista_habitaciones.setObjectName("lista_habitaciones")
        self.lista_luces = QtWidgets.QListWidget(self.centralwidget)
        self.lista_luces.setGeometry(QtCore.QRect(20, 430, 221, 231))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lista_luces.setFont(font)
        self.lista_luces.setObjectName("lista_luces")
        self.lista_puertas = QtWidgets.QListWidget(self.centralwidget)
        self.lista_puertas.setGeometry(QtCore.QRect(510, 430, 221, 231))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lista_puertas.setFont(font)
        self.lista_puertas.setObjectName("lista_puertas")
        self.lista_ventanas = QtWidgets.QListWidget(self.centralwidget)
        self.lista_ventanas.setGeometry(QtCore.QRect(1010, 140, 221, 211))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lista_ventanas.setFont(font)
        self.lista_ventanas.setObjectName("lista_ventanas")
        self.lbl_paneles_nombre = QtWidgets.QLabel(self.centralwidget)
        self.lbl_paneles_nombre.setGeometry(QtCore.QRect(1240, 420, 101, 22))
        self.lbl_paneles_nombre.setObjectName("lbl_paneles_nombre")
        self.lista_paneles = QtWidgets.QListWidget(self.centralwidget)
        self.lista_paneles.setGeometry(QtCore.QRect(1010, 430, 221, 231))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lista_paneles.setFont(font)
        self.lista_paneles.setObjectName("lista_paneles")
        self.cbx_paneles_hab = QtWidgets.QComboBox(self.centralwidget)
        self.cbx_paneles_hab.setGeometry(QtCore.QRect(1240, 520, 211, 31))
        self.cbx_paneles_hab.setObjectName("cbx_paneles_hab")
        self.cbx_paneles_hab.addItem("")
        self.line_6 = QtWidgets.QFrame(self.centralwidget)
        self.line_6.setGeometry(QtCore.QRect(1010, 390, 451, 16))
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.lbl_paneles_hab = QtWidgets.QLabel(self.centralwidget)
        self.lbl_paneles_hab.setGeometry(QtCore.QRect(1240, 490, 101, 22))
        self.lbl_paneles_hab.setObjectName("lbl_paneles_hab")
        self.lbl_paneles_list = QtWidgets.QLabel(self.centralwidget)
        self.lbl_paneles_list.setGeometry(QtCore.QRect(1010, 400, 121, 22))
        self.lbl_paneles_list.setObjectName("lbl_paneles_list")
        self.btn_paneles = QtWidgets.QPushButton(self.centralwidget)
        self.btn_paneles.setGeometry(QtCore.QRect(1370, 580, 91, 38))
        self.btn_paneles.setStyleSheet("background-color: rgb(114, 159, 207);")
        self.btn_paneles.setObjectName("btn_paneles")
        self.lbl_paneles = QtWidgets.QLabel(self.centralwidget)
        self.lbl_paneles.setGeometry(QtCore.QRect(1010, 360, 191, 31))
        self.lbl_paneles.setObjectName("lbl_paneles")
        self.txt_paneles = QtWidgets.QLineEdit(self.centralwidget)
        self.txt_paneles.setGeometry(QtCore.QRect(1240, 450, 211, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.txt_paneles.setFont(font)
        self.txt_paneles.setObjectName("txt_paneles")
        self.btn_limpiar_casa = QtWidgets.QPushButton(self.centralwidget)
        self.btn_limpiar_casa.setGeometry(QtCore.QRect(350, 20, 91, 38))
        self.btn_limpiar_casa.setStyleSheet("background-color: rgb(114, 159, 207);")
        self.btn_limpiar_casa.setObjectName("btn_limpiar_casa")
        self.lbl_dispositivos_tipo = QtWidgets.QLabel(self.centralwidget)
        self.lbl_dispositivos_tipo.setGeometry(QtCore.QRect(250, 270, 101, 22))
        self.lbl_dispositivos_tipo.setObjectName("lbl_dispositivos_tipo")
        self.cbx_dispositivos_tipo = QtWidgets.QComboBox(self.centralwidget)
        self.cbx_dispositivos_tipo.setGeometry(QtCore.QRect(250, 290, 211, 31))
        self.cbx_dispositivos_tipo.setObjectName("cbx_dispositivos_tipo")
        self.cbx_dispositivos_tipo.addItem("")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1531, 21))
        self.menubar.setObjectName("menubar")
        self.menuMen = QtWidgets.QMenu(self.menubar)
        self.menuMen.setObjectName("menuMen")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionPantalla_Principal = QtWidgets.QAction(MainWindow)
        self.actionPantalla_Principal.setObjectName("actionPantalla_Principal")
        self.menuMen.addAction(self.actionPantalla_Principal)
        self.menubar.addAction(self.menuMen.menuAction())

        #Métodos estáticos
        self.search_dispositivos()
        #Accion de los botonres
        self.btn_dispositivo.clicked.connect(self.agregar_dispositivo)
        self.btn_habitacion.clicked.connect(self.agregar_habitacion)
        self.btn_luces.clicked.connect(self.agregar_luz)
        self.btn_puertas.clicked.connect(self.agregar_puerta)
        self.btn_ventana.clicked.connect(self.agregar_ventana)
        self.btn_paneles.clicked.connect(self.agregar_paneles)


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.lbl_dispositivos.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">Dispositivos</span></p></body></html>"))
        self.txt_dispositivo.setText(_translate("MainWindow", "Nombre Dispotivio"))
        self.txt_dispositivo.setPlaceholderText(_translate("MainWindow", "Escriba un nombre"))
        self.lbl_dispositivo.setText(_translate("MainWindow", "Disposiivo"))
        self.btn_dispositivo.setText(_translate("MainWindow", "Agregar"))
        self.lbl_dispositivos_list.setText(_translate("MainWindow", "Lista de Dispositivos"))
        self.lbl_dispositivo_hab.setText(_translate("MainWindow", "Lugar"))
        self.btn_habitacion.setText(_translate("MainWindow", "Agregar"))
        self.lbl_habitacion.setText(_translate("MainWindow", "Lugar"))
        self.txt_habitacion.setText(_translate("MainWindow", "Nombre Habitación/Lugar"))
        self.txt_habitacion.setPlaceholderText(_translate("MainWindow", "Escriba un nombre"))
        self.lbl_habitaciones_list.setText(_translate("MainWindow", "Lista de Lugares"))
        self.lbl_habitacion_2.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">Lugares</span></p></body></html>"))
        self.cbx_dispositivo_hab.setItemText(0, _translate("MainWindow", "<Seleccionar>"))
        self.btn_luces.setText(_translate("MainWindow", "Agregar"))
        self.lbl_luces_nomb.setText(_translate("MainWindow", "Nombre"))
        self.txt_puerta.setText(_translate("MainWindow", "Nombre Puerta"))
        self.txt_puerta.setPlaceholderText(_translate("MainWindow", "Escriba un nombre"))
        self.lbl_luces_hab.setText(_translate("MainWindow", "Lugar"))
        self.lbl_puertas_list.setText(_translate("MainWindow", "Lista de Puertas"))
        self.lbl_luces_list.setText(_translate("MainWindow", "Lista de Luces"))
        self.cbx_luces_hab.setItemText(0, _translate("MainWindow", "<Seleccionar>"))
        self.lbl_luces.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">Luces</span></p></body></html>"))
        self.btn_puertas.setText(_translate("MainWindow", "Agregar"))
        self.txt_luces.setText(_translate("MainWindow", "Nombre"))
        self.txt_luces.setPlaceholderText(_translate("MainWindow", "Escriba un nombre"))
        self.lbl_puerta.setText(_translate("MainWindow", "Nombre"))
        self.lbl_habitacion1_4.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">Puertas</span></p></body></html>"))
        self.lbl_puerta_hab.setText(_translate("MainWindow", "Lugar"))
        self.cbx_puerta_hab.setItemText(0, _translate("MainWindow", "<Seleccionar>"))
        self.cbx_puertas.setItemText(0, _translate("MainWindow", "<Seleccionar>"))
        self.lbl_puertas_tipo.setText(_translate("MainWindow", "Tipo"))
        self.lbl_ventana_hab.setText(_translate("MainWindow", "Lugar"))
        self.cbx_ventana_hab.setItemText(0, _translate("MainWindow", "<Seleccionar>"))
        self.btn_ventana.setText(_translate("MainWindow", "Agregar"))
        self.lbl_ventanas.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">Ventanas</span></p></body></html>"))
        self.txt_ventana.setText(_translate("MainWindow", "Nombre"))
        self.txt_ventana.setPlaceholderText(_translate("MainWindow", "Escriba un nombre"))
        self.lbl_ventanas_nombre.setText(_translate("MainWindow", "Nombre"))
        self.lbl_ventana_list.setText(_translate("MainWindow", "Lista de Ventanas"))
        self.lbl_rooms.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:18pt; font-style:italic; text-decoration: underline;\">Monitoreo de Elementos</span></p></body></html>"))
        self.lbl_paneles_nombre.setText(_translate("MainWindow", "Nombre"))
        self.cbx_paneles_hab.setItemText(0, _translate("MainWindow", "<Seleccionar>"))
        self.lbl_paneles_hab.setText(_translate("MainWindow", "Lugar"))
        self.lbl_paneles_list.setText(_translate("MainWindow", "Lista de Paneles Solares"))
        self.btn_paneles.setText(_translate("MainWindow", "Agregar"))
        self.lbl_paneles.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">Paneles Solares</span></p></body></html>"))
        self.txt_paneles.setText(_translate("MainWindow", "Nombre"))
        self.txt_paneles.setPlaceholderText(_translate("MainWindow", "Escriba un nombre"))
        self.btn_limpiar_casa.setText(_translate("MainWindow", "Limpiar Casa"))
        self.lbl_dispositivos_tipo.setText(_translate("MainWindow", "Tipo"))
        self.cbx_dispositivos_tipo.setItemText(0, _translate("MainWindow", "<Seleccionar>"))
        self.menuMen.setTitle(_translate("MainWindow", "Menú"))
        self.actionPantalla_Principal.setText(_translate("MainWindow", "Pantalla Principal"))

#Métodos dinámicos
    def search_dispositivos(self):
        lista = []
        ventanas = self.repositorio.mostrar_ventanas()
        dispositivos = self.repositorio.mostrar_dispositivos()
        habitaciones = self.repositorio.mostrar_habitaciones()
        luces = self.repositorio.mostrar_luces()
        puertas = self.repositorio.mostrar_puertas()
        paneles = self.repositorio.mostrar_paneles()
        #Agregando hechos a la lista.
        self.lista_dispositivos.addItems(dispositivos)
        self.lista_ventanas.addItems(ventanas)
        self.lista_habitaciones.addItems(habitaciones)
        self.lista_luces.addItems(luces)
        self.lista_puertas.addItems(puertas)
        self.lista_paneles.addItems(paneles)
        #Agregando habitaciones a los ComboBox
        self.cbx_dispositivo_hab.addItems(habitaciones)
        self.cbx_luces_hab.addItems(habitaciones)
        self.cbx_ventana_hab.addItems(habitaciones)
        self.cbx_puerta_hab.addItems(habitaciones)
        self.cbx_paneles_hab.addItems(habitaciones)
        self.cbx_puertas.addItems(["Exterior", "Interior"])
        self.cbx_dispositivos_tipo.addItems(["PaneleSolar", "AC", "Regadera"])


    def isValidOption(self):
        if self.opciones.currentText() != "<Seleccionar>" and self.input_nombre.text() != "":
            return True
        return False


    def display_error_qt(self):
        error = QtWidgets.QErrorMessage()
        error.setWindowModality(QtCore.Qt.WindowModal)
        error.showMessage("Asegurese de que el campo de nombre no este vacio y que se seleccione un tipo de "
                          "consulta")
        # error.setIcon(QtWidgets.QMessageBox.Critical)
        error.setWindowTitle("Error")
        error.exec_()


    def agregar_dispositivo(self):
        if self.cbx_dispositivo_hab.currentText() != "<Seleccionar>" or self.txt_dispositivo.text() != "":
            habitacion = self.cbx_dispositivo_hab.currentText().lower()
            nombre = self.txt_dispositivo.text().lower()
            tipo = self.cbx_dispositivos_tipo.currentText().lower()
            query = self.repositorio.prolog_instance.query("agregar_dispositivo(" + nombre +"," + habitacion +"," + tipo + ").")
            for solution in query:
                print(solution)
            dispositivos = self.repositorio.mostrar_dispositivos()
            self.lista_dispositivos.clear()
            self.lista_dispositivos.addItems(dispositivos)
        else:
            self.display_error_qt()

    def agregar_habitacion(self):
        if self.txt_dispositivo.text() != "":
            nombre = self.txt_habitacion.text().lower()
            print(nombre)
            #query = self.repositorio.prolog_instance.query("agregar_lugar(" + nombre +"," + str(0) + ").")
            query = self.repositorio.prolog_instance.query("agregar_lugar(" + nombre +").")
            for solution in query:
                print(solution)
            habitaciones = self.repositorio.mostrar_habitaciones()
            self.lista_habitaciones.clear()
            self.lista_habitaciones.addItems(habitaciones)

        else:
            self.display_error_qt()

    def agregar_luz(self):
        if self.cbx_luces_hab.currentText() != "<Seleccionar>" or self.txt_luces.text() != "":
            habitacion = self.cbx_luces_hab.currentText().lower()
            nombre = self.txt_luces.text().lower()

            query = self.repositorio.prolog_instance.query("agregar_luz(" + nombre +"," + habitacion + ").")
            for solution in query:
                print(solution)
            luces = self.repositorio.mostrar_luces()
            self.lista_luces.clear()
            self.lista_luces.addItems(luces)
        else:
            self.display_error_qt()

    def agregar_puerta(self):
        if self.cbx_puerta_hab.currentText() != "<Seleccionar>" or self.cbx_puertas.currentText() \
                or self.txt_puerta.text() != "":
            habitacion = self.cbx_puerta_hab.currentText().lower()
            nombre = self.txt_puerta.text()
            tipo_puerta = self.cbx_puertas.currentText().lower()
            query = self.repositorio.prolog_instance.query("agregar_puerta(" + nombre + "," + habitacion + ","+ tipo_puerta + ").")
            for solution in query:
                print(solution)
            puertas = self.repositorio.mostrar_puertas()
            self.lista_puertas.clear()
            self.lista_puertas.addItems(puertas)
        else:
            self.display_error_qt()


    def agregar_ventana(self):
        if self.cbx_ventana_hab.currentText() != "<Seleccionar>" or self.txt_ventana.text() != "":
            habitacion = self.cbx_ventana_hab.currentText().lower()
            nombre = self.txt_ventana.text().lower()
            query = self.repositorio.prolog_instance.query("agregar_ventana(" + nombre +"," + habitacion + ").")
            for solution in query:
                print(solution)
            ventanas = self.repositorio.mostrar_ventanas()
            self.lista_ventanas.clear()
            self.lista_ventanas.addItems(ventanas)
        else:
            self.display_error_qt()

    def agregar_paneles(self):
        if self.cbx_paneles_hab.currentText() != "<Seleccionar>" or self.txt_paneles.text() != "":
            habitacion = self.cbx_paneles_hab.currentText().lower()
            nombre = self.txt_paneles.text().lower()

            query = self.repositorio.prolog_instance.query("agregar_panel(" + nombre +"," + habitacion + ").")
            for solution in query:
                print(solution)
            paneles = self.repositorio.mostrar_paneles()
            self.lista_paneles.clear()
            self.lista_paneles.addItems(paneles)
        else:
            self.display_error_qt()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
